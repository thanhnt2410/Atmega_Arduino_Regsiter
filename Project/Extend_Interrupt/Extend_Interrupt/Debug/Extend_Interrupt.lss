
Extend_Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000027a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000027a  0000030e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080006a  0080006a  00000318  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000318  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000348  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000384  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000864  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000634  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b2  00000000  00000000  0000125c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  00001610  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ad  00000000  00000000  00001688  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000292  00000000  00000000  00001a35  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001cc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 1a 01 	jmp	0x234	; 0x234 <__vector_18>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e7       	ldi	r30, 0x7A	; 122
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <main>
  8a:	0c 94 3b 01 	jmp	0x276	; 0x276 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z7effect1v>:
unsigned char led[10] ={0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};
volatile int i=0;

void effect1()
{
	PORTA=0x01; //xuat ra 5v o chan A0		=>0b00000001<<1 = 0x00000010;
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  96:	2f ef       	ldi	r18, 0xFF	; 255
  98:	43 ec       	ldi	r20, 0xC3	; 195
  9a:	89 e0       	ldi	r24, 0x09	; 9
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	40 40       	sbci	r20, 0x00	; 0
  a0:	80 40       	sbci	r24, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <_Z7effect1v+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <_Z7effect1v+0x14>
  a6:	00 00       	nop
	_delay_ms(200);
	for(int i=0; i<7; i++)
  a8:	20 e0       	ldi	r18, 0x00	; 0
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	27 30       	cpi	r18, 0x07	; 7
  ae:	31 05       	cpc	r19, r1
  b0:	7c f4       	brge	.+30     	; 0xd0 <_Z7effect1v+0x3e>
	{
		PORTA = PORTA<<1;	//Dich 1 bit tu trai sang phai
  b2:	8b b3       	in	r24, 0x1b	; 27
  b4:	88 0f       	add	r24, r24
  b6:	8b bb       	out	0x1b, r24	; 27
  b8:	9f ef       	ldi	r25, 0xFF	; 255
  ba:	43 ec       	ldi	r20, 0xC3	; 195
  bc:	89 e0       	ldi	r24, 0x09	; 9
  be:	91 50       	subi	r25, 0x01	; 1
  c0:	40 40       	sbci	r20, 0x00	; 0
  c2:	80 40       	sbci	r24, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <_Z7effect1v+0x2c>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <_Z7effect1v+0x36>
  c8:	00 00       	nop

void effect1()
{
	PORTA=0x01; //xuat ra 5v o chan A0		=>0b00000001<<1 = 0x00000010;
	_delay_ms(200);
	for(int i=0; i<7; i++)
  ca:	2f 5f       	subi	r18, 0xFF	; 255
  cc:	3f 4f       	sbci	r19, 0xFF	; 255
  ce:	ee cf       	rjmp	.-36     	; 0xac <_Z7effect1v+0x1a>
  d0:	08 95       	ret

000000d2 <_Z7effect2v>:
		_delay_ms(200);
	}
}
void effect2()
{
	PORTA = 0x00;// Chan PA xuat ra 0v
  d2:	1b ba       	out	0x1b, r1	; 27
  d4:	2f ef       	ldi	r18, 0xFF	; 255
  d6:	43 ec       	ldi	r20, 0xC3	; 195
  d8:	89 e0       	ldi	r24, 0x09	; 9
  da:	21 50       	subi	r18, 0x01	; 1
  dc:	40 40       	sbci	r20, 0x00	; 0
  de:	80 40       	sbci	r24, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <_Z7effect2v+0x8>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <_Z7effect2v+0x12>
  e4:	00 00       	nop
	_delay_ms(200);
	for(int i=0; i<4; i++)
  e6:	20 e0       	ldi	r18, 0x00	; 0
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	24 30       	cpi	r18, 0x04	; 4
  ec:	31 05       	cpc	r19, r1
  ee:	24 f5       	brge	.+72     	; 0x138 <_Z7effect2v+0x66>
	{
		PORTA |= (1<<i);
  f0:	6b b3       	in	r22, 0x1b	; 27
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	ac 01       	movw	r20, r24
  f8:	02 2e       	mov	r0, r18
  fa:	02 c0       	rjmp	.+4      	; 0x100 <_Z7effect2v+0x2e>
  fc:	44 0f       	add	r20, r20
  fe:	55 1f       	adc	r21, r21
 100:	0a 94       	dec	r0
 102:	e2 f7       	brpl	.-8      	; 0xfc <_Z7effect2v+0x2a>
 104:	46 2b       	or	r20, r22
 106:	4b bb       	out	0x1b, r20	; 27
		PORTA |= 1<<(7-i);
 108:	6b b3       	in	r22, 0x1b	; 27
 10a:	47 e0       	ldi	r20, 0x07	; 7
 10c:	50 e0       	ldi	r21, 0x00	; 0
 10e:	42 1b       	sub	r20, r18
 110:	53 0b       	sbc	r21, r19
 112:	02 c0       	rjmp	.+4      	; 0x118 <_Z7effect2v+0x46>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	4a 95       	dec	r20
 11a:	e2 f7       	brpl	.-8      	; 0x114 <_Z7effect2v+0x42>
 11c:	86 2b       	or	r24, r22
 11e:	8b bb       	out	0x1b, r24	; 27
 120:	9f ef       	ldi	r25, 0xFF	; 255
 122:	43 ec       	ldi	r20, 0xC3	; 195
 124:	89 e0       	ldi	r24, 0x09	; 9
 126:	91 50       	subi	r25, 0x01	; 1
 128:	40 40       	sbci	r20, 0x00	; 0
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <_Z7effect2v+0x54>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <_Z7effect2v+0x5e>
 130:	00 00       	nop
}
void effect2()
{
	PORTA = 0x00;// Chan PA xuat ra 0v
	_delay_ms(200);
	for(int i=0; i<4; i++)
 132:	2f 5f       	subi	r18, 0xFF	; 255
 134:	3f 4f       	sbci	r19, 0xFF	; 255
 136:	d9 cf       	rjmp	.-78     	; 0xea <_Z7effect2v+0x18>
 138:	08 95       	ret

0000013a <_Z7effect3v>:
		_delay_ms(200);
	}
}
void effect3()
{
	PORTA = 0x00; //Chan A xuat ra 0v
 13a:	1b ba       	out	0x1b, r1	; 27
 13c:	2f ef       	ldi	r18, 0xFF	; 255
 13e:	83 ec       	ldi	r24, 0xC3	; 195
 140:	99 e0       	ldi	r25, 0x09	; 9
 142:	21 50       	subi	r18, 0x01	; 1
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <_Z7effect3v+0x8>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <_Z7effect3v+0x12>
 14c:	00 00       	nop
	_delay_ms(200);
	for (int i=4; i>0; i--)
 14e:	24 e0       	ldi	r18, 0x04	; 4
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	12 16       	cp	r1, r18
 154:	13 06       	cpc	r1, r19
 156:	3c f5       	brge	.+78     	; 0x1a6 <_Z7effect3v+0x6c>
	{
		PORTA |= (1<<(i-1));
 158:	eb b3       	in	r30, 0x1b	; 27
 15a:	b9 01       	movw	r22, r18
 15c:	61 50       	subi	r22, 0x01	; 1
 15e:	71 09       	sbc	r23, r1
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	ac 01       	movw	r20, r24
 166:	06 2e       	mov	r0, r22
 168:	02 c0       	rjmp	.+4      	; 0x16e <_Z7effect3v+0x34>
 16a:	44 0f       	add	r20, r20
 16c:	55 1f       	adc	r21, r21
 16e:	0a 94       	dec	r0
 170:	e2 f7       	brpl	.-8      	; 0x16a <_Z7effect3v+0x30>
 172:	4e 2b       	or	r20, r30
 174:	4b bb       	out	0x1b, r20	; 27
		PORTA |= 1<<(7-(i-1));
 176:	eb b3       	in	r30, 0x1b	; 27
 178:	48 e0       	ldi	r20, 0x08	; 8
 17a:	50 e0       	ldi	r21, 0x00	; 0
 17c:	da 01       	movw	r26, r20
 17e:	a2 1b       	sub	r26, r18
 180:	b3 0b       	sbc	r27, r19
 182:	02 c0       	rjmp	.+4      	; 0x188 <_Z7effect3v+0x4e>
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	aa 95       	dec	r26
 18a:	e2 f7       	brpl	.-8      	; 0x184 <_Z7effect3v+0x4a>
 18c:	8e 2b       	or	r24, r30
 18e:	8b bb       	out	0x1b, r24	; 27
 190:	bf ef       	ldi	r27, 0xFF	; 255
 192:	23 ec       	ldi	r18, 0xC3	; 195
 194:	89 e0       	ldi	r24, 0x09	; 9
 196:	b1 50       	subi	r27, 0x01	; 1
 198:	20 40       	sbci	r18, 0x00	; 0
 19a:	80 40       	sbci	r24, 0x00	; 0
 19c:	e1 f7       	brne	.-8      	; 0x196 <_Z7effect3v+0x5c>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <_Z7effect3v+0x66>
 1a0:	00 00       	nop
}
void effect3()
{
	PORTA = 0x00; //Chan A xuat ra 0v
	_delay_ms(200);
	for (int i=4; i>0; i--)
 1a2:	9b 01       	movw	r18, r22
 1a4:	d6 cf       	rjmp	.-84     	; 0x152 <_Z7effect3v+0x18>
 1a6:	08 95       	ret

000001a8 <main>:
		_delay_ms(200);
	}
}
int main(void)
{
	DDRA =0xff ;// output
 1a8:	8f ef       	ldi	r24, 0xFF	; 255
 1aa:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xff;
 1ac:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xff;
 1ae:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xff; //D0 la output, D2 la input
 1b0:	81 bb       	out	0x11, r24	; 17
	PORTA =0xff; //xuat 5v
 1b2:	8b bb       	out	0x1b, r24	; 27
	PORTB = 0xff;
 1b4:	88 bb       	out	0x18, r24	; 24
	PORTC = 0xff;
 1b6:	85 bb       	out	0x15, r24	; 21
	PORTD =(0<<PIND0);	//Chan D0 output 0v
 1b8:	12 ba       	out	0x12, r1	; 18
	GICR |=(1<<INT2);	//Ngat 2
 1ba:	8b b7       	in	r24, 0x3b	; 59
 1bc:	80 62       	ori	r24, 0x20	; 32
 1be:	8b bf       	out	0x3b, r24	; 59
	//MCUCR |=(1<<ISC01);	//Ngat suon xuong
	MCUCSR |=(1<<ISC2);		//Ngat suon len
 1c0:	84 b7       	in	r24, 0x34	; 52
 1c2:	80 64       	ori	r24, 0x40	; 64
 1c4:	84 bf       	out	0x34, r24	; 52
	sei();
 1c6:	78 94       	sei
	
    /* Replace with your application code */
    while (1) 
    {
		if(i==0)
 1c8:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 1cc:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 1d0:	89 2b       	or	r24, r25
 1d2:	59 f4       	brne	.+22     	; 0x1ea <main+0x42>
		{
			PORTD = led[i+1];
 1d4:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__data_end>
 1d8:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__data_end+0x1>
 1dc:	ef 59       	subi	r30, 0x9F	; 159
 1de:	ff 4f       	sbci	r31, 0xFF	; 255
 1e0:	80 81       	ld	r24, Z
 1e2:	82 bb       	out	0x12, r24	; 18
			effect1();
 1e4:	0e 94 49 00 	call	0x92	; 0x92 <_Z7effect1v>
 1e8:	ef cf       	rjmp	.-34     	; 0x1c8 <main+0x20>
			
		}
		else if(i==1)
 1ea:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 1ee:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	59 f4       	brne	.+22     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
		{
			PORTD =led[i+1];
 1f6:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__data_end>
 1fa:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__data_end+0x1>
 1fe:	ef 59       	subi	r30, 0x9F	; 159
 200:	ff 4f       	sbci	r31, 0xFF	; 255
 202:	80 81       	ld	r24, Z
 204:	82 bb       	out	0x12, r24	; 18
			effect2();
 206:	0e 94 69 00 	call	0xd2	; 0xd2 <_Z7effect2v>
 20a:	de cf       	rjmp	.-68     	; 0x1c8 <main+0x20>
			
		}
		else if(i==2)
 20c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 210:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 214:	02 97       	sbiw	r24, 0x02	; 2
 216:	59 f4       	brne	.+22     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
		{
			PORTD =led[i+1];
 218:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <__data_end>
 21c:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <__data_end+0x1>
 220:	ef 59       	subi	r30, 0x9F	; 159
 222:	ff 4f       	sbci	r31, 0xFF	; 255
 224:	80 81       	ld	r24, Z
 226:	82 bb       	out	0x12, r24	; 18
			effect3();
 228:	0e 94 9d 00 	call	0x13a	; 0x13a <_Z7effect3v>
 22c:	cd cf       	rjmp	.-102    	; 0x1c8 <main+0x20>
		else
		{
			break;
		}
    }
}
 22e:	80 e0       	ldi	r24, 0x00	; 0
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	08 95       	ret

00000234 <__vector_18>:

ISR(INT2_vect)
{
 234:	1f 92       	push	r1
 236:	0f 92       	push	r0
 238:	0f b6       	in	r0, 0x3f	; 63
 23a:	0f 92       	push	r0
 23c:	11 24       	eor	r1, r1
 23e:	8f 93       	push	r24
 240:	9f 93       	push	r25
		//if(i>2)
		//{
			//i==0;
		//}
	//}
	i++;
 242:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 246:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 24a:	01 96       	adiw	r24, 0x01	; 1
 24c:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
 250:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
	if(i>2)
 254:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 258:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 25c:	03 97       	sbiw	r24, 0x03	; 3
 25e:	24 f0       	brlt	.+8      	; 0x268 <__vector_18+0x34>
	{
		i=0;
 260:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <__data_end+0x1>
 264:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
	}
}
 268:	9f 91       	pop	r25
 26a:	8f 91       	pop	r24
 26c:	0f 90       	pop	r0
 26e:	0f be       	out	0x3f, r0	; 63
 270:	0f 90       	pop	r0
 272:	1f 90       	pop	r1
 274:	18 95       	reti

00000276 <_exit>:
 276:	f8 94       	cli

00000278 <__stop_program>:
 278:	ff cf       	rjmp	.-2      	; 0x278 <__stop_program>
